name: Django CI/CD Pipeline
on: [push, pull_request]
jobs:
  
  test:
    runs-on: ubuntu-latest
    steps:
    - name: Check out code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install poetry
        cd backend
        poetry install

    - name: Cache venv created by poetry (configured to be in '.venv')
      uses: actions/cache@v4
      with:
        path: ~/.cache/pypoetry
        key: venv-${{ runner.os }}-${{ hashFiles('poetry.lock') }}
      

    - name: Run migrations
      env:
        DBENGINE: django.db.backends.sqlite3
        POSTGRES_DB: ":memory:"
      run: |
        cd backend
        source $(poetry env info --path)/bin/activate
        python manage.py migrate

    - name: Run tests
      env:
        DBENGINE: django.db.backends.sqlite3
        POSTGRES_DB: ":memory:"
      run: |
        cd backend
        source $(poetry env info --path)/bin/activate
        python manage.py test

  lint:
    needs: test
    runs-on: ubuntu-latest

    steps:
    - name: Check out code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8

    - name: Run Flake8
      run: |
        cd backend 
        flake8 .

  build:
    needs: lint
    runs-on: ubuntu-latest
    steps:

    - name: Check out code
      uses: actions/checkout@v3

    - name: Log in to Docker Hub
      run: echo ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }} | docker login -u ${{ secrets.DOCKER_HUB_USERNAME }} --password-stdin

    - name:
      run: ls backend/docker/django

    - name: Build Docker image
      run: docker build -f backend/docker/django/Dockerfile -t ${{ secrets.DOCKER_HUB_USERNAME }}/myapp:${{ github.sha }} .

    - name: Push Docker image to Docker Hub
      run: docker push ${{ secrets.DOCKER_HUB_USERNAME }}/myapp:${{ github.sha }}

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:

    - name: Pull docker
      run: |
        ssh -o StrictHostKeyChecking=no user_n@158.160.72.130 << 'EOF'
          

        EOF
  # docker pull kuchaser/myapp:343gdsfdhgsghfg
  # docker stop 343gdsfdhgsghfg || true
    # docker rm 343gdsfdhgsghfg || true
  # docker run -d --name name_project -p 8000:80 kuchaser/myapp:343gdsfdhgsghfg 
         