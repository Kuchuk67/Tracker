name: Django CI
on: [push, pull_request]
jobs:
  # test:
  #   runs-on: ubuntu-latest

  #   steps:
  #   - name: Check out code
  #     uses: actions/checkout@v3

  #   - name: Set up Python
  #     uses: actions/setup-python@v4
  #     with:
  #       python-version: '3.12'

  #   - name: Install dependencies
  #     run: |
  #       python -m pip install --upgrade pip
  #       pip install poetry
  #       cd backend
  #       poetry install

  #   - name: Run migrations
  #     env:
  #       DBENGINE: django.db.backends.sqlite3
  #       POSTGRES_DB: ":memory:"
  #     run: |
  #       cd backend
  #       source $(poetry env info --path)/bin/activate
  #       python manage.py migrate

  #   - name: Run tests
  #     env:
  #       DBENGINE: django.db.backends.sqlite3
  #       POSTGRES_DB: ":memory:"
  #     run: |
  #       cd backend
  #       source $(poetry env info --path)/bin/activate
  #       python manage.py test
  build:

    runs-on: ubuntu-latest
    steps:

    - name: Check out code
      uses: actions/checkout@v3

    

    - name: Log in to Docker Hub
      run: echo ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }} | docker login -u ${{ secrets.DOCKER_HUB_USERNAME }} --password-stdin

    - name: Build Docker images
      run: docker-compose build

    - name: Push Docker images
      uses: docker/build-push-action@v2
      with:
        context: .
        push: true
        tags: ${{ secrets.DOCKER_HUB_USERNAME }}/myapp:latest




    # - name: Build Docker image
    #   run: docker build -f backend/docker/django/Dockerfile -t ${{ secrets.DOCKER_HUB_USERNAME }}/myapp:${{ github.sha }} .

    # - name: Push Docker image to Docker Hub
    #   run: |
    #     docker tag ${{ secrets.DOCKER_HUB_USERNAME }}/myapp:${{ github.sha }} ${{ secrets.DOCKER_HUB_USERNAME }}/myapp:latest
    #     docker push ${{ secrets.DOCKER_HUB_USERNAME }}/myapp:latest
