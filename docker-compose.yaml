services:
  nginx:
    image: nginx:latest
    restart: unless-stopped
    ports:
      - 80:80
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./html:/usr/share/nginx/html
    networks:
      - backend


  db:
    restart: always
    image: postgres:16.3-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    hostname: db
    networks:
      - backend
    env_file:
      - ./backend/.env

  redis:
    image: redis
    hostname: redis
    restart: unless-stopped
    command: redis-server --port 6380
    ports:
      - 6380:6380
    volumes:
      - ./redisdata:/data
    networks:
       - backend

  django:
    restart: always
    build:
      context: .
      dockerfile: ./backend/docker/django/Dockerfile
    command: 
      bash -c "set -o errexit &&
      set -o nounset &&
      set -o pipefail &&

      cd backend &&

      python manage.py makemigrations &&
      python manage.py migrate &&

      python manage.py loaddata Habit_fixture.json &&

      python manage.py telega &  &&

      python manage.py add_user  &&

      python manage.py runserver 0.0.0.0:8000"
    ports:
      - 8000:8000
    env_file:
      - ./backend/.env
    networks:
      - backend
    depends_on: 
      - db

  celery_worker:
    restart: always
    #image: celery_worker
    build:
      context: .
      dockerfile: ./backend/docker/django/Dockerfile
    command: 
      bash -c "set -o errexit
      set -o nounset

      cd backend

      celery -A config worker --uid=nobody --gid=nogroup"
    networks:
      - backend
    volumes:
      - celery:/celery
    depends_on:
      - redis
      - db
      - django

  celery_beat:
    restart: always
    build:
      context: .
      dockerfile: ./backend/docker/django/Dockerfile
    command: 
      bash -c "set -o errexit &&
      set -o nounset &&

      cd backend &&

      celery -A config beat"
    volumes:
      - celery:/celery
    networks:
      - backend
    depends_on:
      - redis
      - db
      - django

      
volumes:
  postgres_data:
  celery:

networks:
  backend:
    driver: bridge
  frontend:
    driver: bridge
